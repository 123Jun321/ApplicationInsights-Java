/*
 * AppInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'java'

jar {
    version = '1.0'
    baseName = 'manual-tests'
}

dependencies {
    compile project(':core')
    compile project(':logging')
}

// region global variables

project.ext.set("msftAppInsights", "Microsoft Application Insights")

// endregion global variables

// region Shared sub-projects configuration

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'


    task checkUploadProperties << {
        if (!this.hasProperty("mavenUserPassword")) {
            throw new GroovyRuntimeException("Property mavenUserPassword should be defined for uploadArchives task")
        } else if (!this.hasProperty("mavenUsername")) {
            throw new GroovyRuntimeException("Property mavenUsername should be defined for uploadArchives task")
        } else if (!this.hasProperty("mavenRepositoryUrl")) {
            throw new GroovyRuntimeException("Property mavenRepositoryUrl should be defined for uploadArchives task")
        }
    }

    task checkIfReleaseAndUpdateVersion << {
        if (this.hasProperty("releaseVersion")) {
            version = releaseVersion
        }
    }
    tasks.uploadArchives.dependsOn(checkUploadProperties)
    tasks.uploadArchives.dependsOn(checkIfReleaseAndUpdateVersion)

    compileJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
        options.bootClasspath = "${System.getenv('JAVA_JRE_6')}/lib/rt.jar"
    }

    configurations {
        deployerJars
    }

    dependencies {
        deployerJars "org.apache.maven.wagon:wagon-ftp:2.8"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.0'
    }
}

// Azure SDK Pom as a reference: https://repo1.maven.org/maven2/com/microsoft/azure/azure-core/0.7.0/azure-core-0.7.0.pom
def updatePomWithGeneralProjectInformation(pomObject) {
    pomObject.project {
        url = "https://github.com/Microsoft/AppInsights-Java"

        licenses {
            license {
                name = "MIT License"
                url = "http://www.opensource.org/licenses/mit-license.php"
            }
        }

        scm {
            url = "scm:git:https://github.com/Microsoft/AppInsights-Java"
            connection = "scm:git:git://github.com/Microsoft/AppInsights-Java.git"
        }

        developers {
            developer {
                id = "microsoft"
                name = "Microsoft"
            }
        }
    }
}

// endregion Shared sub-projects configuration